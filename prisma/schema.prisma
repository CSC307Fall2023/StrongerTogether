// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id  Int @id @default(autoincrement())
//   email String @unique
//   password String 
//   toDos ToDo[]
// }

// model ToDo {
//   id Int @id @default(autoincrement())
//   value String
//   done Boolean
//   owner User @relation(fields: [ownerId], references: [id])
//   ownerId Int 
// }

model User {
  // model the user and the profiles
  id                   Int          @id @default(autoincrement())
  name                 String
  password             String
  email                String       @unique
  experience           String
  verified             Boolean
  ProfileImage         Bytes
  initiatedFriendships Friendship[] @relation("FriendshipInitiator")
  receivedFriendships  Friendship[] @relation("FriendshipRecipient")
  Interest             Interest[]
}

model Friendship {
  // model different friendship relationships
  initiator   User             @relation("FriendshipInitiator", fields: [initiatorId], references: [id])
  initiatorId Int
  recipient   User             @relation("FriendshipRecipient", fields: [recipientId], references: [id])
  recipientId Int
  status      FriendshipStatus @default(pending)

  @@id([initiatorId, recipientId])
}

model Interest {
  // model different interst of userse
  Id       Int    @id @default(autoincrement())
  interest String
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
}

model Votes  {

}

model Post {
  Id Int @id @default(autoincrement())
  authorId Int
  author User @relation(fields: [authorId], references: [id])
}

enum FriendshipStatus {
  pending
  accepted
  declined
  blocked
}

model Equipment {
  id            Int     @id @default(autoincrement())
  name          String
  short_description String
  long_description  String
  image_path    String
}